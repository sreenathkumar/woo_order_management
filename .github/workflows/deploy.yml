name: Deploy to Cloudways

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pnpm if not already installed
        run: |
          if ! command -v pnpm &> /dev/null; then
            npm install -g pnpm
          else
            echo "pnpm already installed"
          fi

      - name: Write .env.production with secrets
        run: |
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env.production
          echo "DB_URI=${{ secrets.DB_URI }}" >> .env.production
          echo "UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}" >> .env.production
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env.production
          echo "AUTH_RESEND_KEY=${{ secrets.AUTH_RESEND_KEY }}" >> .env.production
          echo "SALT_ROUND=${{ secrets.SALT_ROUND }}" >> .env.production
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env.production
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env.production
          echo "colors=${{ secrets.colors }}" >> .env.production
          echo "WOO_KEY=${{ secrets.WOO_KEY }}" >> .env.production
          echo "WOO_SECRET=${{ secrets.WOO_SECRET }}" >> .env.production
          echo "WOO_API_URI=${{ secrets.WOO_API_URI }}" >> .env.production
          echo "WOO_API_QUERY_LIMIT=${{ secrets.WOO_API_QUERY_LIMIT }}" >> .env.production
          echo "DEFAULT_DATE_INTERVAL=${{ secrets.DEFAULT_DATE_INTERVAL }}" >> .env.production
          echo "AUTH_TRUST_HOST=${{ secrets.AUTH_TRUST_HOST }}" >> .env.production

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Next.js app with standalone output
        run: pnpm build
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          DB_URI: ${{ secrets.DB_URI }}
          UPLOADTHING_TOKEN: ${{ secrets.UPLOADTHING_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_RESEND_KEY: ${{ secrets.AUTH_RESEND_KEY }}
          SALT_ROUND: ${{ secrets.SALT_ROUND }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          colors: ${{ secrets.colors }}
          WOO_KEY: ${{ secrets.WOO_KEY }}
          WOO_SECRET: ${{ secrets.WOO_SECRET }}
          WOO_API_URI: ${{ secrets.WOO_API_URI }}
          WOO_API_QUERY_LIMIT: ${{ secrets.WOO_API_QUERY_LIMIT }}
          DEFAULT_DATE_INTERVAL: ${{ secrets.DEFAULT_DATE_INTERVAL }}
          AUTH_TRUST_HOST: ${{ secrets.AUTH_TRUST_HOST }}

      - name: Setup SSH for remote commands
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CLOUDWAYS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.CLOUDWAYS_HOST }} >> ~/.ssh/known_hosts

      - name: Sync standalone build
        run: |
          rsync -avz --delete --no-perms --no-times \
            --exclude='.htaccess' \
            .next/standalone/ \
            ${{ secrets.CLOUDWAYS_USER }}@${{ secrets.CLOUDWAYS_HOST }}:applications/${{ secrets.CLOUDWAYS_APP_ID }}/public_html/

      - name: Sync static files
        run: |
          rsync -avz --delete --no-perms --no-times \
            .next/static/ \
            ${{ secrets.CLOUDWAYS_USER }}@${{ secrets.CLOUDWAYS_HOST }}:applications/${{ secrets.CLOUDWAYS_APP_ID }}/public_html/.next/static/

      - name: SSH into server and restart app with PM2
        run: |
          ssh ${{ secrets.CLOUDWAYS_USER }}@${{ secrets.CLOUDWAYS_HOST }} "
            cd applications/${{ secrets.CLOUDWAYS_APP_ID }}/public_html
            [ -L _next ] || ln -s .next _next &&
            npx pm2 reload woo-order-management || npx pm2 start server.js --name 'woo-order-management'
          "
